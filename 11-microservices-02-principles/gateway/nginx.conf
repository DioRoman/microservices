worker_processes 1;

events {
    worker_connections 1024;
}

http {
    upstream security { server security:3000; }
    upstream uploader { server uploader:3000; }
    upstream minio    { server storage:9000; }

    server {
        listen 80;

        # Public endpoints (no auth)
        location = /v1/register {
            proxy_pass http://security/v1/user;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
        }
        location = /v1/token {
            proxy_pass http://security/v1/token;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
        }

        # Auth validation subrequest
        location = /auth {
            internal;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Authorization $http_authorization;

            proxy_pass http://security/v1/token/validation;
            proxy_intercept_errors on;
            proxy_ignore_client_abort on;

            error_page 401 = @error401;
            error_page 403 = @error403;
        }

        # Protected endpoints with auth_request
        location /v1/user {
            auth_request /auth;
            proxy_pass http://security$request_uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
        }

        location = /v1/upload {
            auth_request /auth;
            proxy_pass http://uploader/v1/upload;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
        }

        location ~ ^/v1/user/([^/]+)$ {
            auth_request /auth;
            proxy_pass http://minio/images/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location @error401 { return 401 'Unauthorized'; }
        location @error403 { return 403 'Forbidden'; }
    }
}
